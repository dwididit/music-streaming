name: Dev Testing ðŸ”Ž

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: dev-testing

    steps:
      # Step to checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Step to create the .env file using GitHub secrets
      - name: Create .env file for dev
        run: |
          echo "MINIO_DEV_ENDPOINT=${{ secrets.MINIO_DEV_ENDPOINT }}" > .env
          echo "MINIO_DEV_ACCESS_KEY=${{ secrets.MINIO_DEV_ACCESS_KEY }}" >> .env
          echo "MINIO_DEV_SECRET_KEY=${{ secrets.MINIO_DEV_SECRET_KEY }}" >> .env
          echo "MINIO_STG_ENDPOINT=${{ secrets.MINIO_STG_ENDPOINT }}" >> .env
          echo "MINIO_STG_ACCESS_KEY=${{ secrets.MINIO_STG_ACCESS_KEY }}" >> .env
          echo "MINIO_STG_SECRET_KEY=${{ secrets.MINIO_STG_SECRET_KEY }}" >> .env
          echo "APP_STG_PORT=${{ secrets.APP_STG_PORT }}" >> .env
          echo "MINIO_PROD_ENDPOINT=${{ secrets.MINIO_PROD_ENDPOINT }}" >> .env
          echo "MINIO_PROD_ACCESS_KEY=${{ secrets.MINIO_PROD_ACCESS_KEY }}" >> .env
          echo "MINIO_PROD_SECRET_KEY=${{ secrets.MINIO_PROD_SECRET_KEY }}" >> .env
          echo "APP_PROD_PORT=${{ secrets.APP_PROD_PORT }}" >> .env
          echo "APP_IMAGE=${{ secrets.APP_IMAGE }}" >> .env
          echo "APP_TAG=${{ secrets.APP_TAG }}" >> .env

      # Step to build and run the application using docker-compose
      - name: Build and Run application
        run: |
          cat .env
          sudo docker-compose --env-file .env up --build --detach pacmusic-dev

      # Step to test if the application is running correctly
      - name: Test Hit Endpoint
        run: |
          sleep 10  # Wait for the application to start
          curl http://localhost:5000  # Test the application endpoint

      # Step to install the testing requirements
      - name: Install testing requirements
        run: pip install -r test/requirements.txt

      # Step to run the tests
        run: python3 test/test.py
