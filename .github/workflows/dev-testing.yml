name: Dev Testing ðŸ”Ž

on:
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    environment: dev-testing

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Create .env file for dev
        run: |
          echo "MINIO_DEV_ENDPOINT=${{ secrets.MINIO_DEV_ENDPOINT }}" > .env
          echo "MINIO_DEV_ACCESS_KEY=${{ secrets.MINIO_DEV_ACCESS_KEY }}" >> .env
          echo "MINIO_DEV_SECRET_KEY=${{ secrets.MINIO_DEV_SECRET_KEY }}" >> .env
          echo "MINIO_STG_ENDPOINT=${{ secrets.MINIO_STG_ENDPOINT }}" >> .env
          echo "MINIO_STG_ACCESS_KEY=${{ secrets.MINIO_STG_ACCESS_KEY }}" >> .env
          echo "MINIO_STG_SECRET_KEY=${{ secrets.MINIO_STG_SECRET_KEY }}" >> .env
          echo "APP_STG_PORT=${{ secrets.APP_STG_PORT }}" >> .env
          echo "MINIO_PROD_ENDPOINT=${{ secrets.MINIO_PROD_ENDPOINT }}" >> .env
          echo "MINIO_PROD_ACCESS_KEY=${{ secrets.MINIO_PROD_ACCESS_KEY }}" >> .env
          echo "MINIO_PROD_SECRET_KEY=${{ secrets.MINIO_PROD_SECRET_KEY }}" >> .env
          echo "APP_PROD_PORT=${{ secrets.APP_PROD_PORT }}" >> .env
          echo "APP_IMAGE=${{ secrets.APP_IMAGE }}" >> .env
          echo "APP_TAG=${{ secrets.APP_TAG }}" >> .env

      - name: Move requirements.txt if necessary
        run: |
          if [ -f "app/requirements.txt" ]; then
            mv app/requirements.txt requirements.txt
          fi

      - name: Build and Run application
        run: |
          cat .env
          sudo docker-compose --env-file .env up --build --detach pacmusic-dev

      - name: Test Hit Endpoint
        run: |
          sleep 10
          curl http://localhost:5000

      - name: Install testing requirements
        run: pip install -r test/requirements.txt
