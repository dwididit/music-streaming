name: Deploy Production ðŸš€

on:
  release:
    types: [published, edited]

jobs:
  deploy-to-production:
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY_PRODUCTION }}

      - name: Run deployment script on production server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST_PRODUCTION }}
          username: ${{ secrets.SSH_USER_NAME_PRODUCTION }}
          key: ${{ secrets.SSH_PRIVATE_KEY_PRODUCTION }}
          script: |
            APP_PROD_PATH="${{ secrets.APP_PROD_PATH }}"
            if [ -d "$APP_PROD_PATH" ]; then
              cd $APP_PROD_PATH
              sudo docker-compose down --remove-orphans --timeout 60 pacmusic-prod || true
              git pull origin main
            else
              ssh-keyscan github.com >> ~/.ssh/known_hosts
              git clone ${{ secrets.GIT_URL }} $APP_PROD_PATH
              cd $APP_PROD_PATH
            fi
            touch .env
            echo "MINIO_PROD_ENDPOINT=${{ secrets.MINIO_PROD_ENDPOINT }}" >> .env
            echo "MINIO_PROD_ACCESS_KEY=${{ secrets.MINIO_PROD_ACCESS_KEY }}" >> .env
            echo "MINIO_PROD_SECRET_KEY=${{ secrets.MINIO_PROD_SECRET_KEY }}" >> .env
            echo "APP_PROD_PORT=${{ secrets.APP_PROD_PORT }}" >> .env
            echo "APP_IMAGE=${{ secrets.APP_IMAGE }}" >> .env
            echo "APP_TAG=${{ secrets.APP_TAG }}" >> .env

            cat .env
            
            sudo docker-compose --env-file .env up --build --detach pacmusic-prod

      - name: Wait for the application to start
        run: sleep 10

      - name: Test Hit Endpoint
        run: curl -f ${{ secrets.PROD_URL }}
